server {
    server_name pics-or-pix.uk www.pics-or-pix.uk;

    root /var/www/pics-or-pix/public;
    index index.html;
    
    # Performance optimizations
    client_max_body_size 10m;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Connection timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    
    # Enable gzip compression
    gzip on;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types
        application/javascript
        application/json
        application/x-javascript
        application/xml
        application/xml+rss
        application/vnd.ms-fontobject
        application/wasm
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Caching for static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot|otf|webp)$ {
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
        access_log off;
        tcp_nodelay off;
        open_file_cache max=1000 inactive=30s;
        open_file_cache_valid 60s;
        open_file_cache_min_uses 2;
        open_file_cache_errors on;
    }
    
    # AVIF image support
    location ~* \.(avif)$ {
        expires 60d;
        add_header Cache-Control "public, max-age=5184000, immutable";
        add_header Content-Type "image/avif";
        access_log off;
        tcp_nodelay off;
        open_file_cache max=1000 inactive=30s;
        open_file_cache_valid 60s;
        open_file_cache_min_uses 2;
        open_file_cache_errors on;
    }

    # Forward requests to the Node.js server
    location / {
        try_files $uri @nodejs;
    }

    location @nodejs {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Performance optimizations
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;
        proxy_read_timeout 60s;
        proxy_connect_timeout 60s;
        proxy_busy_buffers_size 64k;
        proxy_temp_file_write_size 64k;
    }

    location /api {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Performance optimizations
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;
        proxy_read_timeout 60s;
        proxy_connect_timeout 60s;
        proxy_busy_buffers_size 64k;
        proxy_temp_file_write_size 64k;
    }
    
    # Health check endpoint
    location /api/health {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;
        
        # Add specific headers for monitoring
        add_header Content-Type application/json;
    }

    location /images {
        alias /var/www/pics-or-pix/public/images;
        try_files $uri $uri/ =404;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000, immutable";
        access_log off;
        tcp_nodelay off;
        open_file_cache max=3000 inactive=120s;
        open_file_cache_valid 180s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
        sendfile on;
        tcp_nopush on;
    }
    
    # Optimized images location block with enhanced caching
    location /images-optimized {
        alias /var/www/pics-or-pix/public/images-optimized;
        try_files $uri $uri/ =404;
        expires 60d;
        add_header Cache-Control "public, max-age=5184000, immutable";
        access_log off;
        tcp_nodelay off;
        open_file_cache max=5000 inactive=180s;
        open_file_cache_valid 240s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
        sendfile on;
        tcp_nopush on;
        
    }

    # Security headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; script-src 'self' 'unsafe-inline';" always;
    
    # HTTP/3 future support hint
    add_header Alt-Svc 'h3=":443"; ma=86400, h3-29=":443"; ma=86400' always;

    listen 443 ssl http2; # managed by Certbot
    listen [::]:443 ssl http2; # managed by Certbot
    
    ssl_certificate /etc/letsencrypt/live/pics-or-pix.uk/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/pics-or-pix.uk/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # Additional SSL optimizations
    ssl_session_cache shared:SSL:10m;
}

server {
    if ($host = www.pics-or-pix.uk) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = pics-or-pix.uk) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name pics-or-pix.uk www.pics-or-pix.uk;
    return 404; # managed by Certbot
}